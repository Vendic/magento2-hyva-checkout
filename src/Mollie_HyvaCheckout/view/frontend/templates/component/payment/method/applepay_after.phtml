<?php
/*
 * Copyright Magmodules.eu. All rights reserved.
 * See COPYING.txt for license details.
 */

/** @var \Laminas\Escaper\Escaper $escaper */
/** @var \Magento\Framework\View\Element\Template $block */
/** @var \Mollie\HyvaCheckout\Magewire\Checkout\Payment\Method\ApplePay $magewire */
?>
<div class="hidden">
    <script>
        function hideApplePayWhenNotAvailable() {
            if (!window.ApplePaySession || !window.ApplePaySession.canMakePayments()) {
                const applePayElement = document.getElementById('payment-method-option-mollie_methods_applepay');
                if (applePayElement) {
                    applePayElement.parentNode.removeChild(applePayElement);
                }
            }
        }

        hideApplePayWhenNotAvailable();

        window.addEventListener('magewire:update', component => {
            hideApplePayWhenNotAvailable();
        });
    </script>
    <?php isset($hyvaCsp) && $hyvaCsp->registerInlineScript() ?>

    <?php if ($magewire->directIntegrationIsEnabled()): ?>
        <script>
            window.addEventListener('checkout:payment:method-activate', (event) => {
                if (event.detail.method !== 'mollie_methods_applepay') {
                    return;
                }

                hyvaCheckout.validation.register(
                    'mollie_methods_applepay',
                    async () => new Promise(resolve => {
                        const component = Magewire.find('<?= $escaper->escapeJs($block->getNameInLayout()) ?>');

                        let session;

                        let request = {
                            countryCode: "<?php echo $escaper->escapeJs($magewire->countryId); ?>",
                            currencyCode: "<?php echo $escaper->escapeJs($magewire->currencyCode); ?>",
                            supportedNetworks: <?php echo json_encode($magewire->getSupportedNetworks()); ?>,
                            merchantCapabilities: ['supports3DS'],
                            total: {
                                label: "<?php echo $escaper->escapeJs($magewire->storeName); ?>",
                                amount: component.amount
                            },
                        }

                        if (!session) {
                            session = new ApplePaySession(3, request);
                        }

                        session.onpaymentmethodselected = () => {
                            session.completePaymentMethodSelection({
                                label: 'Total',
                                type: 'final',
                                amount: component.amount
                            }, []);
                        };

                        session.onpaymentauthorized = (event) => {
                            try {
                                component.setApplePayPaymentToken(JSON.stringify(event.payment.token)).then(() => {
                                    resolve(true);
                                });
                            } catch {
                                session.completePayment(ApplePaySession.STATUS_ERROR);
                                resolve(false);
                            }
                        };

                        session.onvalidatemerchant = (event) => {
                            window.fetch(
                                "<?php echo $magewire->getApplePayValidationUrl(); ?>",
                                {
                                    method: 'POST',
                                    mode: 'cors',
                                    credentials: 'include',
                                    headers: {
                                        'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
                                    },
                                    body: 'validationURL=' + event.validationURL + '&form_key=' + hyva.getFormKey(),
                                }
                            )
                                .then(response => response.json())
                                .then(response => session.completeMerchantValidation(response))
                                .catch(error => {
                                    console.error('Received error', error);
                                    hyvaCheckout.payment.dispatchExceptionMessage(
                                        'Something went wrong, please check the logs for more information.'
                                    )
                                    session.abort();
                                    session = null;

                                    resolve(false);
                                });
                        };

                        session.oncancel = () => {
                            session = null;
                            resolve(false);
                        };

                        session.begin();
                    }),
                    document.querySelector('.mollie-applepay'),
                    'payment'
                );
            });
        </script>
        <?php isset($hyvaCsp) && $hyvaCsp->registerInlineScript() ?>
    <?php endif; ?>
</div>
